import React, { useState, useEffect } from "react";
import "./TestTaskScreen.css";

export default function TestTaskScreen() {
  const [answers, setAnswers] = useState({
    q1: "",
    q2: "",
    q3: "",
    q4: "",
  });

  const [headerVisible, setHeaderVisible] = useState(false);

  useEffect(() => {
    const timer = setTimeout(() => setHeaderVisible(true), 100);
    return () => clearTimeout(timer);
  }, []);

  const handleChange = (key, value) => {
    setAnswers((prev) => ({ ...prev, [key]: value }));
  };

  const handleSubmit = async () => {
    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
    const message = `–ù–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã:
1. ${answers.q1}
2. ${answers.q2}
3. ${answers.q3}
4. ${answers.q4}`;

    try {
      const response = await fetch(
        `https://api.telegram.org/bot7696778952:AAHLdMCzK1m_LrPsC5skXsiRQKRB5pDL2KQ/sendMessage`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            chat_id: 6045806877, // –ø–µ—Ä–µ–¥–∞—ë–º –∫–∞–∫ —á–∏—Å–ª–æ
            text: message,
          }),
        }
      );

      const data = await response.json();
      if (!response.ok) {
        // –í—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞ Telegram
        throw new Error(data.description || "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram");
      }

      alert("–û—Ç–≤–µ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã üöÄ");
      console.log(answers);
      setAnswers({ q1: "", q2: "", q3: "", q4: "" });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
    }
  };

  const questions = [
    {
      key: "q1",
      question: "1. –ß—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ–¥–∞–∂–∏ —Ä–µ–∑–∫–æ —É–ø–∞–ª–∏?",
      hint: "–û–ø–∏—à–∏—Ç–µ –º–∏–Ω–∏–º—É–º 4 —à–∞–≥–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–µ–¥–ø—Ä–∏–º–µ—Ç–µ.",
    },
    {
      key: "q2",
      question: "2. –ö–∞–∫ –≤—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç–µ, —á—Ç–æ —Ä–µ–∫–ª–∞–º–∞ ¬´—Ä–∞–±–æ—Ç–∞–µ—Ç —Ö–æ—Ä–æ—à–æ¬ª?",
      hint: "–£–∫–∞–∂–∏—Ç–µ, –Ω–∞ —á—Ç–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ—Ç–µ—Å—å –∏ –∫–∞–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ.",
    },
    {
      key: "q3",
      question:
        "3. –ù–∞–∑–æ–≤–∏—Ç–µ 3‚Äì5 —Ñ–∏—à–µ–∫ –∏–ª–∏ —Ö–∏—Ç—Ä–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏",
      hint: "–ì–ª–∞–≤–Ω–æ–µ ‚Äì –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∏–ª–∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–∏—ë–º—ã. üí°",
    },
    {
      key: "q4",
      question:
        "4. –ß—Ç–æ –ª—É—á—à–µ: —Å—Ç–∞–≤–∫–∞ 10 ‚ÇΩ –∏ 1000 –ø–æ–∫–∞–∑–æ–≤ –∏–ª–∏ 25 ‚ÇΩ –∏ 100 –ø–æ–∫–∞–∑–æ–≤? –ü–æ—á–µ–º—É?",
      hint: "–í–∞–∂–Ω–æ –æ–±—ä—è—Å–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç.",
    },
  ];

  return (
    <div className="gradient-background">
      <div className="abstract-shape" />
      <div className="container">
        {headerVisible && (
          <header className="header-box">
            <h1 className="title">‚è≥ –¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ</h1>
            <h2 className="subtitle">–¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º üßëüèª‚Äçüíª</h2>
            <p className="timer">üü£ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 1 –º–∏–Ω—É—Ç–∞</p>
            <p className="note">
              –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∏–∂–µ. –í–∞—à –æ–ø—ã—Ç –∏ –ª–æ–≥–∏–∫–∞ ‚Äì –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É!
            </p>
          </header>
        )}

        <main>
          {questions.map(({ key, question, hint }) => (
            <section className="question-box" key={key}>
              <p className="question">{question}</p>
              <p className="hint">{hint}</p>
              <textarea
                className="input"
                placeholder="–í–∞—à –æ—Ç–≤–µ—Ç..."
                value={answers[key]}
                onChange={(e) => handleChange(key, e.target.value)}
              />
            </section>
          ))}
        </main>

        <button className="button" onClick={handleSubmit}>
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </button>
      </div>
    </div>
  );
}
